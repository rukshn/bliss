// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  name             String?
  posts            Post[]
  password         String?
  githubId         Int?      @unique
  lastSeen         DateTime?
  messageId        Int?
  projectId        Int?
  Project          Project?  @relation(fields: [projectId], references: [id])
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  Message          Message[]
}

model Post {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  title      String
  content    String?
  published  Boolean  @default(false)
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  channel    Channel  @relation(fields: [channelId], references: [id])
  channelId  Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  parent     Post?    @relation("PostToPost", fields: [parentId], references: [id])
  parentId   Int?

  Post Post[] @relation("PostToPost")
}

model Message {
  id      Int    @id @default(autoincrement())
  uuid    String @unique @default(uuid())
  title   String
  content String

  senderId Int
  sender   User @relation("SentMessages", fields: [senderId], references: [id])

  receiverId Int
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  created_at DateTime @default(now())
  User       User?    @relation(fields: [userId], references: [id])
  userId     Int?
}

model Project {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  admin       User[]
  archived    Boolean @default(false)

  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  Channel    Channel[]
}

model Channel {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  project     Project @relation(fields: [projectId], references: [id])
  projectId   Int
  archived    Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  Post       Post[]
}
